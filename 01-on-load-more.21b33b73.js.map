{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SCAAC,EAAAD,EAAA,S,aAAeE,ECAZ,W,sBDAkBC,EACPC,G,IAAEC,EAAFD,EAAEC,SAAQC,EAAVF,EAAYG,cAAM,IAAAD,GAAQA,E,aACpCE,KAAKC,KAAOD,KAAKE,QAAQL,GAEzBE,GAAUC,KAAKG,M,iBAGjBC,IAAA,U,MAAA,SAAQP,GACN,IAAMI,EAAO,GAEb,OADAA,EAAKI,OAASC,SAASC,cAAcV,GAC9BI,C,IAGTG,IAAA,S,MAAA,WACEJ,KAAKC,KAAKI,OAAOG,UAAW,EAC5BR,KAAKC,KAAKI,OAAOI,YAAc,W,IAGjCL,IAAA,U,MAAA,WACEJ,KAAKC,KAAKI,OAAOG,UAAW,EAC5BR,KAAKC,KAAKI,OAAOI,YAAc,Y,IAGjCL,IAAA,O,MAAA,WACEJ,KAAKC,KAAKI,OAAOK,UAAUC,OAAO,Y,IAGpCP,IAAA,O,MAAA,WACEJ,KAAKC,KAAKI,OAAOK,UAAUE,IAAI,Y,OC5BhC,G,0BFOGC,EAAO,CACXC,KAAMR,SAASC,cAAc,gBAC7BQ,iBAAkBT,SAASC,cAAc,aAGvCS,EAAa,GAEXC,EAAc,IAAIvB,EAAY,CAClCG,SAAU,aACVE,QAAQ,IAGJmB,EAAmB,IAAI,EAAA3B,EAAA4B,SA0B7B,SAASC,IACPH,EAAYI,UACZH,EAAiBI,cAAcC,MAAK,SAAA3B,G,IAyD5B4B,EAzBFC,EAhCiCC,EAAS9B,EAAT8B,UAAWC,EAAI/B,EAAJ+B,KAChD,GAAIX,EAAaU,EAKf,OAJAT,EAAYd,YACZyB,EAAAC,GAASC,OAAOC,QACd,8DAGuB,IAAhBJ,EAAKK,QAMdJ,EAAAC,GAASC,OAAOG,QAAQ,oBAA+BC,OAAXlB,EAAW,aAmBrDS,EAjBgBE,EAkBnBQ,KACC,SAAAC,G,MACE,wCAEQF,OADHE,EAAMC,cAAc,4CACWH,OAA5BE,EAAME,aAAa,WAGIJ,OAHKE,EAAMG,KAAK,4FAIhBL,OADAE,EAAMI,MAAM,+CAETN,OADHE,EAAMK,MAAM,kDAERP,OADDE,EAAMM,SAAS,mDACCR,OAAfE,EAAMM,SAAS,yB,IAIrDC,KAAK,IAER9B,EAAKE,iBAAiB6B,mBAAmB,YAAanB,GAQ9CD,EACNX,EAAKE,iBAAiB8B,kBAAkBC,wBADlCC,OAGRC,OAAOC,SAAS,CACdC,IAAkB,EAAb1B,EACL2B,SAAU,WA5CS,IAAIvB,EAAAwB,GAAJ,CAAmB,aAAc,CAChDC,aAAc,MACdC,aAAc,MAGPC,UAETtC,EAAYuC,SACZxC,GAAcW,EAAKK,QAlBnBJ,EAAAC,GAASC,OAAOC,QACd,2E,IAnCRlB,EAAKC,KAAK2C,iBAAiB,UAG3B,SAAkBC,GAKhB,GAJAA,EAAEC,iBAEFzC,EAAiB0C,MAAQF,EAAEG,cAAcC,SAASC,YAAYC,OAEzD9C,EAAiB0C,MAIpB,YAHAhC,EAAAC,GAASC,OAAOC,QACd,sDAKJd,EAAYgD,OACZ/C,EAAiBgD,YA+DjBrD,EAAKE,iBAAiBoD,UAAY,GA5DlC/C,IAEAP,EAAKC,KAAKsD,O,IApBZnD,EAAYhB,KAAKI,OAAOoD,iBAAiB,QAASrC,E","sources":["src/js/01-on-load-more.js","src/js/load-more-btn.js","<<jsx-config-pragma.js>>"],"sourcesContent":["import ImagesApiService from './images-service';\nimport LoadMoreBtn from './load-more-btn';\nimport '../css/styles.css';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst refs = {\n  form: document.querySelector('.search-form'),\n  galleryContainer: document.querySelector('.gallery'),\n};\n\nlet hitsLength = 40;\n\nconst loadMoreBtn = new LoadMoreBtn({\n  selector: '.load-more',\n  hidden: true,\n});\n\nconst imagesApiService = new ImagesApiService();\n\nrefs.form.addEventListener('submit', onSearch);\nloadMoreBtn.refs.button.addEventListener('click', fetchImages);\n\nfunction onSearch(e) {\n  e.preventDefault();\n\n  imagesApiService.query = e.currentTarget.elements.searchQuery.value;\n\n  if (!imagesApiService.query) {\n    Notiflix.Notify.failure(\n      'Search box cannot be empty. Please enter the word.'\n    );\n    return;\n  }\n\n  loadMoreBtn.show();\n  imagesApiService.resetPage();\n  clearGalleryContainer();\n\n  fetchImages();\n\n  refs.form.reset();\n}\n\nfunction fetchImages() {\n  loadMoreBtn.disable();\n  imagesApiService.fetchImages().then(({ totalHits, hits }) => {\n    if (hitsLength > totalHits) {\n      loadMoreBtn.hide();\n      Notiflix.Notify.failure(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      return;\n    } else if (hits.length === 0) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    } else {\n      Notiflix.Notify.success(`Hooray! We found ${hitsLength} images.`);\n\n      renderImagesCards(hits);\n      scrollImagesCards();\n\n      const lightbox = new SimpleLightbox('.gallery a', {\n        captionsData: 'alt',\n        captionDelay: 250,\n      });\n\n      lightbox.refresh();\n\n      loadMoreBtn.enable();\n      hitsLength += hits.length;\n    }\n  });\n}\n\nfunction renderImagesCards(images) {\n  const markup = images\n    .map(\n      image =>\n        `<div class=\"photo-card\">\n  <a href=\"${image.largeImageURL}\" class=\"gallery__item\">\n    <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n  </a>\n  <div class=\"info\">\n    <p class=\"info-item\"><b>Likes</b>${image.likes}</p>\n    <p class=\"info-item\"><b>Views</b>${image.views}</p>\n    <p class=\"info-item\"><b>Comments</b>${image.comments}</p>\n    <p class=\"info-item\"><b>Downloads</b>${image.comments}</p>\n  </div>\n</div>`\n    )\n    .join('');\n\n  refs.galleryContainer.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction clearGalleryContainer() {\n  refs.galleryContainer.innerHTML = '';\n}\n\nfunction scrollImagesCards() {\n  const { height: cardHeight } =\n    refs.galleryContainer.firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n","export default class LoadMoreBtn {\n  constructor({ selector, hidden = false }) {\n    this.refs = this.getRefs(selector);\n\n    hidden && this.hide();\n  }\n\n  getRefs(selector) {\n    const refs = {};\n    refs.button = document.querySelector(selector);\n    return refs;\n  }\n\n  enable() {\n    this.refs.button.disabled = false;\n    this.refs.button.textContent = 'Load more';\n  }\n\n  disable() {\n    this.refs.button.disabled = true;\n    this.refs.button.textContent = 'Loading...';\n  }\n\n  show() {\n    this.refs.button.classList.remove('is-hidden');\n  }\n\n  hide() {\n    this.refs.button.classList.add('is-hidden');\n  }\n}\n",null],"names":["$48xsN","parcelRequire","$8MBJY","$c2587ba687e3cfc9$export$2e2bcd8739ae039","LoadMoreBtn","param","selector","_hidden","hidden","this","refs","getRefs","hide","key","button","document","querySelector","disabled","textContent","classList","remove","add","$d8884aab0d773976$var$refs","form","galleryContainer","$d8884aab0d773976$var$hitsLength","$d8884aab0d773976$var$loadMoreBtn","$d8884aab0d773976$var$imagesApiService","default","$d8884aab0d773976$var$fetchImages","disable","fetchImages","then","cardHeight","markup","totalHits","hits","$parcel$interopDefault","$iU1Pc","Notify","failure","length","success","concat","map","image","largeImageURL","webformatURL","tags","likes","views","comments","join","insertAdjacentHTML","firstElementChild","getBoundingClientRect","height","window","scrollBy","top","behavior","$5IjG7","captionsData","captionDelay","refresh","enable","addEventListener","e","preventDefault","query","currentTarget","elements","searchQuery","value","show","resetPage","innerHTML","reset"],"version":3,"file":"01-on-load-more.21b33b73.js.map"}