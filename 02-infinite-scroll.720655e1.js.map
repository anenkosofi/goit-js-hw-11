{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,0BAMA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,gBAC7BC,iBAAkBF,SAASC,cAAc,aAG3C,IAAIE,EAAa,GAEjB,MAAMC,EAAmB,IAAI,EAAAR,EAAAS,SAkC7B,SAASC,IACPF,EAAiBG,cAAcC,MAAK,EAACC,UAAEA,EAASC,KAAEA,MAChD,GAAIP,EAAaM,EACfE,EAAAC,GAASC,OAAOC,QACd,mEAGG,GAAoB,IAAhBJ,EAAKK,OAKT,CACLJ,EAAAC,GAASC,OAAOG,QAAQ,oBAAoBb,aAgBlD,SAA2Bc,GACzB,MAAMC,EAASD,EACZE,KACCC,GACE,wCACKA,EAAMC,wDACHD,EAAME,sBAAsBF,EAAMG,+FAGXH,EAAMI,mDACNJ,EAAMK,sDACHL,EAAMM,0DACLN,EAAMM,mCAI5CC,KAAK,IAER7B,EAAKI,iBAAiB0B,mBAAmB,YAAaV,E,CAhClDW,CAAkBnB,GAED,IAAIC,EAAAmB,GAAJ,CAAmB,aAAc,CAChDC,aAAc,MACdC,aAAc,MAGPC,UAET9B,GAAcO,EAAKK,M,MAhBnBJ,EAAAC,GAASC,OAAOC,QACd,2E,IAzCRhB,EAAKC,KAAKmC,iBAAiB,UAG3B,SAAkBC,GAKhB,GAJAA,EAAEC,iBAEFhC,EAAiBiC,MAAQF,EAAEG,cAAcC,SAASC,YAAYC,OAEzDrC,EAAiBiC,MAIpB,YAHA1B,EAAAC,GAASC,OAAOC,QACd,sDAKJV,EAAiBsC,YAoEjB5C,EAAKI,iBAAiByC,UAAY,GAjElCrC,IAEAR,EAAKC,KAAK6C,O,IAnBZC,OAAOX,iBAAiB,UAsBxB,WACE,MAAMY,EAAe9C,SAAS+C,gBAAgBC,wBACxCC,EACJnD,EAAKI,iBAAiBgD,kBAAkBF,wBACtCF,EAAaK,OAA2B,EAAlBF,EAASG,QACjC9C,G","sources":["src/js/02-infinite-scroll.js"],"sourcesContent":["import ImagesApiService from './images-service';\nimport '../css/styles.css';\nimport Notiflix from 'notiflix';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst refs = {\n  form: document.querySelector('.search-form'),\n  galleryContainer: document.querySelector('.gallery'),\n};\n\nlet hitsLength = 40;\n\nconst imagesApiService = new ImagesApiService();\n\nrefs.form.addEventListener('submit', onSearch);\nwindow.addEventListener('scroll', onScroll);\n\nfunction onSearch(e) {\n  e.preventDefault();\n\n  imagesApiService.query = e.currentTarget.elements.searchQuery.value;\n\n  if (!imagesApiService.query) {\n    Notiflix.Notify.failure(\n      'Search box cannot be empty. Please enter the word.'\n    );\n    return;\n  }\n\n  imagesApiService.resetPage();\n  clearGalleryContainer();\n\n  fetchImages();\n\n  refs.form.reset();\n}\n\nfunction onScroll() {\n  const documentRect = document.documentElement.getBoundingClientRect();\n  const cardRect =\n    refs.galleryContainer.firstElementChild.getBoundingClientRect();\n  if (documentRect.bottom < cardRect.height * 2) {\n    fetchImages();\n  }\n}\n\nfunction fetchImages() {\n  imagesApiService.fetchImages().then(({ totalHits, hits }) => {\n    if (hitsLength > totalHits) {\n      Notiflix.Notify.failure(\n        \"We're sorry, but you've reached the end of search results.\"\n      );\n      return;\n    } else if (hits.length === 0) {\n      Notiflix.Notify.failure(\n        'Sorry, there are no images matching your search query. Please try again.'\n      );\n      return;\n    } else {\n      Notiflix.Notify.success(`Hooray! We found ${hitsLength} images.`);\n\n      renderImagesCards(hits);\n\n      const lightbox = new SimpleLightbox('.gallery a', {\n        captionsData: 'alt',\n        captionDelay: 250,\n      });\n\n      lightbox.refresh();\n\n      hitsLength += hits.length;\n    }\n  });\n}\n\nfunction renderImagesCards(images) {\n  const markup = images\n    .map(\n      image =>\n        `<div class=\"photo-card\">\n  <a href=\"${image.largeImageURL}\" class=\"gallery__item\">\n    <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" loading=\"lazy\" />\n  </a>\n  <div class=\"info\">\n    <p class=\"info-item\"><b>Likes</b>${image.likes}</p>\n    <p class=\"info-item\"><b>Views</b>${image.views}</p>\n    <p class=\"info-item\"><b>Comments</b>${image.comments}</p>\n    <p class=\"info-item\"><b>Downloads</b>${image.comments}</p>\n  </div>\n</div>`\n    )\n    .join('');\n\n  refs.galleryContainer.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction clearGalleryContainer() {\n  refs.galleryContainer.innerHTML = '';\n}\n"],"names":["$4CFr7","parcelRequire","$f3353f9eb86277b7$var$refs","form","document","querySelector","galleryContainer","$f3353f9eb86277b7$var$hitsLength","$f3353f9eb86277b7$var$imagesApiService","default","$f3353f9eb86277b7$var$fetchImages","fetchImages","then","totalHits","hits","$parcel$interopDefault","$eWCmQ","Notify","failure","length","success","images","markup","map","image","largeImageURL","webformatURL","tags","likes","views","comments","join","insertAdjacentHTML","$f3353f9eb86277b7$var$renderImagesCards","$fZKcF","captionsData","captionDelay","refresh","addEventListener","e","preventDefault","query","currentTarget","elements","searchQuery","value","resetPage","innerHTML","reset","window","documentRect","documentElement","getBoundingClientRect","cardRect","firstElementChild","bottom","height"],"version":3,"file":"02-infinite-scroll.720655e1.js.map"}